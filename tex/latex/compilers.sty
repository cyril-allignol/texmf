\ProvidesPackage{compilers}

\RequirePackage{xparse}
\RequirePackage{mathtools}
\RequirePackage{maths}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Custom compilation commands

\NewDocumentCommand{\first}{o}{\textsc{first}\IfValueT{#1}{(#1)}}
\NewDocumentCommand{\last}{o}{\textsc{last}\IfValueT{#1}{(#1)}}
\NewDocumentCommand{\follow}{o}{\textsc{follow}\IfValueT{#1}{(#1)}}

\RequirePackage{tikz}
\usetikzlibrary{calc, arrows, shapes, positioning, automata}

\tikzstyle{component} = [
rectangle, draw = blue, fill = blue!20,
text centered, text = black, text width = 4cm]

\tikzstyle{component2} = [
rectangle, draw = blue, fill = blue!20,
text centered, text = black, text width = 2.7cm]

\tikzstyle{product} = [text centered, text width = 3cm]

\tikzstyle{table} = [rectangle, draw = black, text centered, text width = 2.5cm]

\tikzstyle{link} = [->, >=stealth', bend right = 60]
\tikzstyle{exchange} = [<->, >=stealth']

\tikzstyle{module} = [diamond, fill = gray!20, text centered, text width = 1.5cm]

\tikzstyle{enveloppe} = [
draw, ellipse, gray, inner xsep = -10pt, inner ysep = 2pt]

\tikzstyle{prod} = [
text centered, font = \scriptsize, text = gray,
fill = white, inner sep = 1pt]

%%%%%%%%%%%%%%%%%%%%%
%% Customize automata

\NewDocumentCommand{\defaultautomata}{}{\tuple{Q, \Sigma, \delta, s, F}}
\NewDocumentCommand{\configuration}{m}{\tuple{#1}}

% #1, #2: vertical and horizontal node separation
\newenvironment{automaton}[2]{%
  \begin{tikzpicture}[auto,
    initial/.style = {
      initial by arrow, initial text =, initial distance = 0.01cm},
    every state/.style = {minimum size = 1.5em, font = \small, thick},
    every path/.style = { thick, ->, >=stealth', font = \small },
    % every loop/.style = {min distance = 1cm, looseness = 10},
    node distance = { #1 and #2 }]
  }{\end{tikzpicture}}

% \state[*>]{identifier}{label}[options (e.g. position)]
% *: accepting state
% >: initial state
\NewDocumentCommand{\state}{st>mmO{}}{%
  \node
  [state, \IfBooleanT{#1}{accepting}, \IfBooleanT{#2}{initial}, #5]
  (#3) {#4};}

% \transition{sourceID}{destID}{label}[options (e.g. loop)]
\NewDocumentCommand{\transition}{mmmO{}}{%
  \path (#1) edge[#4] node{#3} (#2);
}

%%%%%%%%%%%%%
%% T-diagrams

\newlength{\s}
\setlength{\s}{1.8em}

\NewDocumentCommand{\Tcompiler}{O{0em}O{0em}mmm}{%
  \begin{scope}[shift = {(#1, #2)}]
    \coordinate (O);
    \draw[thick] (O) ++(-1.5\s, 0.5\s) -- ++(3\s, 0) -- ++(0, -\s) --
    ++(-\s, 0) -- ++(0, -\s) -- ++(-\s, 0) -- ++(0, \s) -- ++(-\s, 0) -- cycle;
    \node at ($ (O) + (-\s, 0) $) {#3};
    \node at ($ (O) + (\s, 0) $) {#4};
    \node at ($ (O) + (0, -\s) $) {#5};
  \end{scope}
}

\NewDocumentCommand{\Tmachine}{O{0em}O{0em}m}{%
  \begin{scope}[shift = {(#1, #2)}]
    \coordinate (O);
    \node at ($ (O) + (0, 0.15\s) $) {#3};
    \draw[thick] (O) ++(-0.75\s, 0.5\s) -- ++(1.5\s,0) --
    ++(-0.75\s,-\s) -- cycle;
  \end{scope}
}

\NewDocumentCommand{\Tvm}{O{0em}O{0em}mm}{%
  \begin{scope}[shift = {(#1, #2)}]
    \node (O) {#4};
    \node at ($ (O) + (0, \s) $) {#3};
    \draw[thick] (O) ++(-0.5\s, 1.5\s) -- ++(\s, 0) -- ++(0, -2\s) --
    ++(-\s, 0) -- cycle;
  \end{scope}
}

\NewDocumentCommand{\Tprogram}{O{0em}O{0em}mm}{%
  \begin{scope}[shift = {(#1, #2)}]
    \node (O) {#4};
    \node at ($ (O) + (0, 0.8\s) $) {#3};
    \draw[thick] (O) ++(-0.5\s, 1.5\s) arc (-120:-60:\s) -- ++(0, -2\s) --
    ++(-\s, 0) -- cycle;
  \end{scope}
}

\NewDocumentCommand{\Tdata}{O{0em}O{0em}m}{%
  \begin{scope}[shift = {(#1, #2)}]
    \node (O) {#3};
    \draw[thick] (O) ++(-0.5\s, -0.5\s) arc (-120:-60:\s) -- ++(0, \s) --
    ++(-\s, 0) -- cycle;
  \end{scope}
}

\endinput