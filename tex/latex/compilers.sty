\ProvidesPackage{compilers}

%% Formal languages

\newcommand*{\emptyword}{\ensuremath{\Lambda}}
\newcommand*{\length}[1]{\ensuremath{\left|#1\right|}}
\newcommand*{\concat}{\bullet}

%% Compilers

\usepackage{synttree}
\usepackage{xparse}

\usepackage[nounderscore]{syntax}
\renewcommand{\syntleft}{\ttfamily\scshape}
\renewcommand{\syntright}{}
\renewcommand{\litleft}{\ttfamily\bfseries}
\renewcommand{\litright}{}
\renewcommand{\ulitleft}{\ttfamily\bfseries}
\renewcommand{\ulitright}{}
\newcommand{\production}{$\Coloneqq$}
\setlength{\grammarparsep}{3pt}
\setlength{\grammarindent}{5em}

\newcommand{\efermeture}{$\varepsilon$-fermeture}
\newcommand{\regexp}{\textit{regexp}}

\newcommand{\token}[1]{$\langle$#1$\rangle$}
\newcommand{\pointer}[1]{$\stackrel{\text{\tiny#1}}{\longrightarrow}$}
\newcommand{\nonterm}[1]{\texttt{\textsc{#1}}}
\newcommand{\term}[1]{\texttt{\textbf{#1}}}
\newcommand{\produce}{\ensuremath{\Rightarrow}}
\newcommand{\produces}{\ensuremath{\Rightarrow^*}}

\newcommand{\post}[1]{\mathcal{P}(#1)}

\newenvironment{grammaire}{
  \begin{tabular}{>{\ttfamily}l>{\production{} \ttfamily }l}}{
  \end{tabular}}

\NewDocumentCommand\first{o}{%
  \ensuremath{\textsc{first}\IfNoValueTF{#1}{}{(#1)}}%
}
\NewDocumentCommand\last{o}{%
  \ensuremath{\textsc{last}\IfNoValueTF{#1}{}{(#1)}}%
}
\NewDocumentCommand\follow{o}{%
  \ensuremath{\textsc{follow}\IfNoValueTF{#1}{}{(#1)}}%
}

\usetikzlibrary{calc, arrows, shapes, positioning}

\tikzstyle{component} = [
rectangle, draw = blue, fill = blue!20,
text centered, text = black, text width = 4cm]

\tikzstyle{component2} = [
rectangle, draw = blue, fill = blue!20,
text centered, text = black, text width = 2.7cm]

\tikzstyle{product} = [text centered, text width = 3cm]

\tikzstyle{table} = [rectangle, draw = black, text centered, text width = 2.5cm]

\tikzstyle{link} = [->, >=stealth', bend right = 60]
\tikzstyle{exchange} = [<->, >=stealth']

\tikzstyle{module} = [diamond, fill = gray!20, text centered, text width = 1.5cm]

\tikzstyle{enveloppe} = [
draw, ellipse, gray, inner xsep = -10pt, inner ysep = 2pt]

\tikzstyle{prod} = [
text centered, font = \scriptsize, text = gray,
fill = white, inner sep = 1pt]

\newenvironment{automaton}[2]{
  \begin{tikzpicture}[auto,
    initial/.style = {
      initial by arrow, initial text =, initial distance = 0.01cm},
    every state/.style = {
      minimum size = 1.5em, font = \small,
      draw = blue!50, very thick, fill = blue!20},
    every path/.style = { thick, ->, >=stealth', font = \small },
    node distance = { #1 and #2 }]
}{\end{tikzpicture}}

\newlength{\s}
\setlength{\s}{1.8em}

\newcommand{\Tcompiler}[3]{
  \coordinate (O);
  \draw[thick] (O) ++(-1.5\s, 0.5\s) -- ++(3\s, 0) -- ++(0, -\s) --
  ++(-\s, 0) -- ++(0, -\s) -- ++(-\s, 0) -- ++(0, \s) -- ++(-\s, 0) -- cycle;
  \node at ($ (O) + (-\s, 0) $) {#1};
  \node at ($ (O) + (\s, 0) $) {#2};
  \node at ($ (O) + (0, -\s) $) {#3};
}

\newcommand{\Tmachine}[1]{
  \coordinate (O);
  \node at ($ (O) + (0, 0.15\s) $) {#1};
  \draw[thick] (O) ++(-0.75\s, 0.5\s) -- ++(1.5\s,0) -- ++(-0.75\s,-\s) -- cycle;
}

\newcommand{\Tvm}[2]{
  \node (O) {#2};
  \node at ($ (O) + (0, \s) $) {#1};
  \draw[thick] (O) ++(-0.5\s, 1.5\s) -- ++(\s, 0) -- ++(0, -2\s) --
  ++(-\s, 0) -- cycle;
}

\newcommand{\Tprogram}[2]{
  \node (O) {#2};
  \node at ($ (O) + (0, 0.8\s) $) {#1};
  \draw[thick] (O) ++(-0.5\s, 1.5\s) arc (-120:-60:\s) -- ++(0, -2\s) --
  ++(-\s, 0) -- cycle;
}

\newcommand{\Tdata}[1]{
  \node (O) {#1};
  \draw[thick] (O) ++(-0.5\s, -0.5\s) arc (-120:-60:\s) -- ++(0, \s) --
  ++(-\s, 0) -- cycle;
}
